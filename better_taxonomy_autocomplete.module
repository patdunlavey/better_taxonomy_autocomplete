<?php


/**
 * Implements hook_menu_alter().
 */
function better_taxonomy_autocomplete_menu_alter(&$items) {
  $autocomplete_paths = array(
    'taxonomy/autocomplete',
    'autocomplete_deluxe/taxonomy',
  );
  drupal_alter('better_taxonomy_autocomplete_page_callbacks', $autocomplete_paths);

  foreach($autocomplete_paths as $autocomplete_path) {
    if(isset($items[$autocomplete_path]['page callback'])) {
      $items[$autocomplete_path]['page callback'] = 'better_taxonomy_autocomplete_page_callback';
    }
  }
}

/** Custom taxonomy callback, which also accepts an empty string search.
 */
function better_taxonomy_autocomplete_page_callback($field_name, $tags_typed = '', $limit = 10) {
  $field = field_info_field($field_name);

  // The user enters a comma-separated list of tags. We only autocomplete the last tag.
  $tags_typed = drupal_explode_tags($tags_typed);
  $tag_last = drupal_strtolower(array_pop($tags_typed));

  $matches = array();

  // Part of the criteria for the query come from the field's own settings.
  $vids = array();
  $vocabularies = taxonomy_vocabulary_get_names();
  foreach ($field['settings']['allowed_values'] as $tree) {
    // If the content taxonomy setting content_taxonomy_ignore_in_suggestions
    // is set, then the vocabulary is ignored.
    if (empty($tree['content_taxonomy_ignore_in_suggestions'])) {
      $vids[] = $vocabularies[$tree['vocabulary']]->vid;
    }
  }

  if ($tag_last != '') {
    $wheres = array(
      "(t.vid IN  ('". implode("','", $vids) . "'))",
      "(t.name LIKE '%". $tag_last . "%' ESCAPE '\\\\')",
    );
    // Do not select already entered terms.
    if (!empty($tags_typed)) {
      $wheres[] =     "(t.name NOT IN ('". implode("','", $tags_typed) . "'))";
    }

    $sql = <<<EOQ
SELECT t.tid AS tid, t.name AS name
FROM 
{taxonomy_term_data} t

EOQ;
    $sql .= ' WHERE ' . implode(' AND ', $wheres);
    $sql .= <<<EOQ
    
ORDER BY
  CASE
    WHEN t.name LIKE ':string%' THEN 1
    WHEN t.name LIKE '%:string' THEN 999
    ELSE LOCATE(':string', t.name)
  END ASC,
  t.name ASC
LIMIT :limit OFFSET 0
EOQ;



    $params = array(
      ':string' => $tag_last,
      ':limit' => $limit,
    );
    $sql = str_replace(array_keys($params), $params, $sql);
    $results = db_query($sql);
    $tags_return = array();
    if ($results) {
      while ($row = $results->fetchAssoc()) {
        $tags_return[$row['tid']] = $row['name'];
      }
    }
  }
  else {
    $query = db_select('taxonomy_term_data', 't');
    $query->addTag('translatable');
    $query->addTag('term_access');
    $query
      ->fields('t', array('tid', 'name'))
      ->condition('t.vid', $vids);

    if (isset($limit) && $limit > 0) {
      $query->range(0, $limit);
    }
    $tags_return = $query->execute()->fetchAllKeyed();

  }

  $prefix = count($tags_typed) ? drupal_implode_tags($tags_typed) . ', ' : '';

  $term_matches = array();
  foreach ($tags_return as $tid => $name) {
    $n = $name;
    // Term names containing commas or quotes must be wrapped in quotes.
    if (strpos($name, ',') !== FALSE || strpos($name, '"') !== FALSE) {
      $n = '"' . str_replace('"', '""', $name) . '"';
    }
    $term_matches[$prefix . $n] = check_plain($name);
  }

  drupal_json_output($term_matches);
}

